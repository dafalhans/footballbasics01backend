spring.application.name=backend

# podman run --rm -d -p 54323:5432 -e POSTGRES_USER=jpauser -e POSTGRES_PASSWORD=jpapassword -e POSTGRES_DB=testdb --name jpa-testdb2-postgresql postgres

spring.datasource.url=jdbc:postgresql://localhost:54323/testdb
spring.datasource.username=jpauser
spring.datasource.password=jpapassword
#spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql: true

# docker run --name testdb-mysql -e MYSQL_DATABASE -e MYSQL_ROOT_PASSWORD=root -d mysql:8.3.0
# docker run --name msql -d -p 3306:3306 -e MYSQL_DATABASE=cvofocus -e MYSQL_ROOT_PASSWORD=root --restart unless-stopped mysql:8
#spring.datasource.url=jdbc:mysql://localhost:3306/cvofocus
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update


server.error.whitelabel.enabled=false
server.error.path=/error



spring.security.oauth2.client.registration.keycloak.client-id=secfocus
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
# OIDC provider configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak.ozcorp.com:8080/realms/myrealm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
# Token validation
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak.ozcorp.com:8080/realms/myrealm



#spring.security.oauth2.client.registration.isv.client-id=5032ddd2-754d-4da6-8473-f7677c18aa2e
#spring.security.oauth2.client.registration.isv.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.isv.scope=openid
## OIDC provider configuration
#spring.security.oauth2.client.provider.isv.issuer-uri=https://havan.ice.ibmcloud.com/oidc/endpoint/default
#spring.security.oauth2.client.provider.isv.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://havan.ice.ibmcloud.com/oidc/endpoint/default
#spring.security.oauth2.client.provider.isv.authorization-uri: https://havan.ice.ibmcloud.com/oidc/endpoint/default/authorize
#spring.security.oauth2.client.provider.isv.token-uri: https://havan.ice.ibmcloud.com/oidc/endpoint/default/token
#spring.security.oauth2.client.provider.isv.user-info-uri: https://havan.ice.ibmcloud.com/oidc/endpoint/default/userinfo
##spring.security.oauth2.client.provider.isv.user-name-attribute: preferred_username
##spring.security.oauth2.client.provider.isv.issuer-uri: https://havan.ice.ibmcloud.com/oidc/endpoint/default
#spring.security.oauth2.client.provider.isv.jwk-set-uri: https://havan.ice.ibmcloud.com/v1.0/endpoint/default/jwks

logging.level.com.hans.backend.backend.*=DEBUG
#logging.level.root=DEBUG



logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

server.port=9091

management.endpoints.web.exposure.include=*

server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
server.tomcat.basedir=tomcat
server.tomcat.accesslog.directory=logs
#server.tomcat.accesslog.pattern=common
# https://tomcat.apache.org/tomcat-8.5-doc/config/valve.html#Access_Logging custom logs bv voor Response Header
server.tomcat.accesslog.pattern=%h %l %u %t \"%r\" %>s %b --- %{location}o --- %{authorization}i
logging.level.org.apache.tomcat=DEBUG
logging.level.org.apache.catalina=DEBUG

server.forward-headers-strategy=native

#https://restcountries.com/#api-endpoints-using-this-project
custom.com.restcountries.api.baseurl=https://restcountries.com
custom.com.restcountries.api.version=v3.1


#https://stackoverflow.com/questions/28300232/spring-boot-actuator-hides-property-values-in-env-endpoint
management.endpoint.configprops.show-values=always
management.endpoint.env.show-values=ALWAYS
#endpoints.env.keys-to-sanitize=password,secret
